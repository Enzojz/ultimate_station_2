local func = require "ust/func"
local pipe = require "ust/pipe"
local coor = require "ust/coor"
local ust = require "ust"

local rList = pipe.new * {15, 12, 10, 8, 7.5, 6, 5, 4, 3.5, 3, 2.5, 2, 1.75, 1.5, 1.25, 1, 0.9, 0.85, 0.8, 0.75, 0.7, 0.666, 0.633, 0.6, 0.566, 0.533, 0.5, 0.475, 0.45, 0.425, 0.4, 0.375, 0.35, 0.325, 0.3, 0.28, 0.26, 0.24, 0.22, 0.2, 0.18, 0.16, 0.14, 0.12, 0.1, 0.09, 0.08, 0.07, 0.06, 0.05}

rList = pipe.new * rList * pipe.map(pipe.neg()) * pipe.rev() / ust.infi + rList
local trackLengths = {40, 60, 80, 100, 140, 160, 200, 240, 320, 400, 480, 500, 600, 800, 1000}
local trackNumberList = {1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20}

local templatePlatform = {
    "station/rail/ust/era_c/platform.module",
    "station/rail/ust/cargo/platform.module"
}

local createTemplateFn = function(params)
    local trackModule = params.capturedParams.trackModuleList[params.trackType + 1]
    local baseLength = trackLengths[params.lPlatform + 1]
    local nbTracks = trackNumberList[params.trackNb + 1]
    local radius = rList[params.radius + 1] ~= ust.infi and math.floor(rList[params.radius + 1] * 1000) or false
    local width = 5 * (params.platformWidth + 1)
    local hasCatenary = params.catenary == 0
    
    local nSeg = baseLength / 20
    
    local posList = pipe.new * func.rev(ust.posGen(nbTracks, params.platformRight == 0, params.platformLeft == 1))
    
    local indexRefTrack = posList * pipe.map(function(t, i) return {t, i} end) * pipe.filter(function(t) return t[1] end)
    local xOffset = -indexRefTrack[math.ceil(nbTracks / 2)][2] + 1
    
    local result = {}
    
    local yMax = nSeg % 2 == 0 and (nSeg / 2 - 1) or (nSeg - 1) / 2
    local yMin = nSeg % 2 == 0 and (-nSeg / 2) or (1 - nSeg) / 2
    
    for i, isTrack in ipairs(posList) do
        local x = i - 1 + xOffset
        if isTrack then
            for y = yMin, yMax do
                local info = {
                    id = (x >= 0 and x or ((#posList + xOffset - 1) - x)) * nSeg + (y >= 0 and y or (yMax - y)) + 1,
                    type = 1,
                    pos = coor.xyz(x, y, 0),
                    length = 20,
                    width = 5,
                    ref = {prev = y > 0, next = y < 0, left = x > 0 and y == 0, right = x < 0 and y == 0}
                }
                if info.id == 1 and radius then
                    info.radius = radius
                elseif info.id == 1 then
                    info.straight = true
                end
                local slotId, slotIds = ust.slotIds(info)
                result[slotId] = trackModule
                for m, slotIds in pairs(slotIds) do
                    for _, slotId in ipairs(slotIds) do
                        result[slotId] = string.format("station/rail/ust/data/%s.module", m)
                    end
                end
                if hasCatenary then
                    result[ust.base(info.id, 27)] = "station/rail/ust/struct/catenary.module"
                end
            end
        else
            for y = yMin, yMax do
                local info = {
                    id = (x >= 0 and x or ((#posList + xOffset - 1) - x)) * nSeg + (y >= 0 and y or (yMax - y)) + 1,
                    type = 2,
                    pos = coor.xyz(x, y, 0),
                    length = 20,
                    width = width,
                    ref = {left = x > 0, right = x < 0, prev = x == 0 and y > 0, next = x == 0 and y < 0}
                }
                if info.id == 1 and radius ~= ust.infi then
                    info.radius = radius
                end
                local slotId, slotIds = ust.slotIds(info)
                result[slotId] = templatePlatform[params.templateIndex + 1]
                for m, slotIds in pairs(slotIds) do
                    for _, slotId in ipairs(slotIds) do
                        result[slotId] = string.format("station/rail/ust/data/%s.module", m)
                    end
                end
                
                result[ust.base(info.id, 28)] = "station/rail/ust/era_c/sign.module"
                result[ust.mixData(ust.base(info.id, 40), 3)] = "station/rail/ust/era_c/seats.module"
            end
        end
    end
    return result
end

function data()
    return {
        createTemplateFn = createTemplateFn
    }
end
