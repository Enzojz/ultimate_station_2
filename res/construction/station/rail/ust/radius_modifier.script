local coor = require "ust/coor"
local quat = require "ust/quaternion"
local livetext = require "ust/livetext"
local ust = require "ust"

local unpack = table.unpack
local insert = table.insert
local ma = math
local pi = ma.pi
local abs = ma.abs
local pow = math.pow
local floor = math.floor


local preProcessAdd = function(radiusFn)
    return function(modules, change, classedModules, info, data)
        if info.type == 80 and data == 1 then
            modules[ust.base(info.id, 80)] = nil
        elseif info.type == 80 and data == 0 then
            modules[ust.base(info.id, 80)] = change.module
        elseif info.type >= 81 and info.type <= 86 then
            ust.gridization(modules, classedModules)
            local id = info.id
            local m = modules[classedModules[id].slotId]
            
            if classedModules[id].slot[54] then
                modules[classedModules[id].slot[54]] = nil
            end
            
            if classedModules[id].slot[55] then
                modules[classedModules[id].slot[55]] = nil
            end
            
            if classedModules[id].slot[56] then
                modules[classedModules[id].slot[56]] = nil
            end
            
            modules[classedModules[id].slot[80]].variant = 1 - modules[classedModules[id].slot[80]].variant
            
            if info.type >= 81 and info.type <= 84 then
                local radius = radiusFn(data, m, m.info.radius)
                if radius > 999999 then radius = 999999 elseif radius < -999999 then radius = -999999 end
                
                local addSlot = ust.mixData(ust.base(id, 54), radius > 0 and radius % 1000 or -(-radius % 1000))
                modules[addSlot] = {
                    metadata = {isData = true},
                    name = "station/rail/ust/data.module",
                    updateScript = {
                        fileName = "",
                        params = {}
                    },
                    variant = 0
                }
                
                local addSlot = ust.mixData(ust.base(id, 55), radius > 0 and floor(radius / 1000) or -(floor(-radius / 1000)))
                modules[addSlot] = {
                    metadata = {isData = true},
                    name = "station/rail/ust/data.module",
                    updateScript = {
                        fileName = "",
                        params = {}
                    },
                    variant = 0
                }
            elseif info.type == 85 or info.type == 86 then
                if data == 0 then
                    local addSlot = ust.mixData(ust.base(id, 56), 0)
                    modules[addSlot] = {
                        metadata = {isData = true},
                        name = "station/rail/ust/data.module",
                        updateScript = {
                            fileName = "",
                            params = {}
                        },
                        variant = 0
                    }
                end
            end
        end
    end
end

local preProcessAddPrecise =
    preProcessAdd(function(data, m, radius)
        local delta = data > 0 and pow(10, data - 1) or -pow(10, -data - 1)
        if m.info.radius == 10e8 or m.info.straight then
            return delta
        else
            return radius + delta
        end
    end)

local preProcessAddRough =
    preProcessAdd(function(data, m)
        local refArc = m.info.arcs.center
        local i = data
        local rad = (refArc.inf - refArc.sup) + i * pi / 180
        return -floor(20 / rad)
    end)

local preProcessPostAdd = function(modules, change, slotId, classedModules, info, data)
    if change.slotId ~= slotId then
        modules[slotId] = nil
    end
end

function data()
    return {
        preProcessAddPrecise = preProcessAddPrecise,
        preProcessAddRough = preProcessAddRough,
        preProcessPostAdd = preProcessPostAdd
    }

end
