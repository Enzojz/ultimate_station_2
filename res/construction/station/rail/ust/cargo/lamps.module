local coor = require "ust/coor"
local quat = require "ust/quaternion"
local ust = require "ust"

local insert = table.insert

local updateFn = function(result, transform, tag, slotId, addModelFn, params)
    local id = params.modules[slotId].info.id
    local module = params.modules[params.classedModules[id].slotId]
    local info = module.info
    local makeData = module.makeData
    
    local n = 4
    local centerPts, vecs = ust.basePts(info.arcs.center, n)
    
    local pos = centerPts[3]
    local transf = quat.byVec(coor.xyz(0, -1, 0), vecs[3]):mRot() * coor.trans(pos)
    insert(result.models, ust.newModel("station/rail/asset/cargo_lamps.mdl", tag, coor.rotZ90P * transf));
    
    -- SLot to replace itself
    insert(result.slots, {
        id = makeData(28, -1),
        transf = module.info.transf,
        type = "ust_roof",
        spacing = {0, 0, 0, 0}
    })
end
function data()
    return {
        availability = {
            yearFrom = 0,
            yearTo = 0,
        },
        buildMode = "SINGLE",
        cost = {
            price = 0,
        },
        description = {
            name = _("MENU_MODULE_CARGO_PLATFORM_SIGN"),
            description = _("MENU_MODULE_CARGO_PLATFORM_SIGN_DESC"),
        },
        category = {
            categories = {"ust_cat_comp"},
        },
        type = "ust_roof",
        order = {
            value = 3,
        },
        metadata = {
            scriptName = "construction/station/rail/ust/struct/roof",
            classify = "classify",
            typeName = "ust_roof",
            isComponent = true,
            typeId = 28,
            width = 5
        },
        
        updateFn = updateFn,
        
        getModelsFn = function(params)
            return {}
        end
    }

end
