local coor = require "ust/coor"
local quat = require "ust/quaternion"
local livetext = require "ust/livetext"
local ust = require "ust"

local updateFn = function(result, transform, tag, slotId, addModelFn, params)    
    local info = params.modules[slotId].info
    local n = 4
    
    local hVec = coor.xyz(0, 0, info.height)

    local leftPts = ust.basePts(info.arcs.left, n)
    local rightPts = ust.basePts(info.arcs.right, n)
    
    local leftLaneBorder = {}
    local rightLaneBorder = {}
    local leftLane = {}
    local rightLane = {}

    for i = 1, n + 1 do
        leftLaneBorder[i] = leftPts[i] + hVec
        rightLaneBorder[i] = rightPts[i] + hVec
        
        local vec = (leftLaneBorder[i] - rightLaneBorder[i]):normalized()
        
        leftLane[i] = leftLaneBorder[i] - vec * 1.2
        rightLane[i] = rightLaneBorder[i] + vec * 1.2
    end
    
    params.extra[slotId] = {
        leftLane = leftLane,
        rightLane = rightLane
    }
    
    if params.debug == 1 then
        local centerPts, centerVecs = ust.basePts(info.arcs.center, 4)
        local text = tostring(info.id)
        local pos = string.format("(%d, %d)", info.pos.x, info.pos.y)
        
        local addText = function(label, fAlign, h)
            local nameModelsF, width = livetext(h or 2)(label)
            for _, m in ipairs(nameModelsF(function() return coor.trans(fAlign(width)) * coor.rotX90N * info.transf * coor.transZ(info.height) end)) do
                table.insert(result.models, m)
            end
        end
        
        addText(text, function(w) return coor.xyz(-0.5 * w, 0, 0) end)
        addText(pos, function(w) return coor.xyz(-0.5 * w, 0, -2) end, 0.75)
        
        ust.marking(result, slotId, params)
    end
end

function data()
    return {
        availability = {
            yearFrom = 0,
            yearTo = 0,
        },
        buildMode = "SINGLE",
        cost = {
            price = 0,
        },
        description = {
            name = _("MENU_MODULE_PLATFORM_PLACEHOLDER"),
            description = _("MENU_MODULE_PLATFORM_PLACEHOLDER_DESC"),
        },
        category = {
            categories = {"ust_cat_platform"},
        },
        type = "ust_placeholder",
        order = {
            value = 2,
        },
        metadata = {
            typeName = "ust_placeholder",
            isPlaceholder = true,
            typeId = 3,
            width = 5,
            height = 0,
            scriptName = "construction/station/rail/ust/struct/platform",
            preProcessAdd = "preProcessAdd",
            preProcessRemove = "preProcessRemove",
            slotSetup = "slotSetup",
            preClassify = "preClassify",
            postClassify = "postClassify",
            gridization = "gridization"
        },
        
        updateFn = updateFn,
        
        getModelsFn = function(params)
            return {}
        end
    }

end
