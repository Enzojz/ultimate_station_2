local insert = table.insert
local coor = require "ust/coor"

local updateFn = function(result, transform, tag, slotId, addModelFn, params)
    local id = params.modules[slotId].info.id
    
    local trackSlotId = params.classedModules[id].slotId
    local module = params.modules[trackSlotId]
    local makeData = module.makeData
    
    local info = params.modules[trackSlotId].info
    
    insert(result.slots, {
        id = makeData(25, -1),
        transf = coor.scale(coor.xyz(1, 0.1, 1)) * coor.rotZ(0.25 * math.pi) * transform,
        type = "ust_bridge",
        spacing = {0, 0, 0, 0}
    })
    insert(result.slots, {
        id = makeData(25, -1),
        transf = coor.scale(coor.xyz(1, 0.1, 1)) * coor.rotZ(-0.25 * math.pi) * transform,
        type = "ust_bridge",
        spacing = {0, 0, 0, 0}
    })
    
    if module.metadata.isPlatform then
        insert(result.invokeLater, function()
            result.terrainLists[info.id].equal = nil
            result.terrainLists[info.id].equalOpt = nil

            result.groundFaceLists[info.id] = nil
        end)
    elseif module.metadata.isTrack then
        insert(result.invokeLater, function()
            local trackEdgeIndex = params.edgeIndex[trackSlotId]
            local trackEdges = result.edgeLists[trackEdgeIndex]
            if trackEdges then
                trackEdges.alignTerrain = false
            end
        end)
    elseif module.metadata.isStreet then
        insert(result.invokeLater, function()
            local trackEdgeIndex = params.edgeIndex[trackSlotId][5]
            local trackEdges = result.edgeLists[trackEdgeIndex]
            if trackEdges then
                trackEdges.alignTerrain = false
            end
            if result.edgeLists[trackEdgeIndex + 1] and result.edgeLists[trackEdgeIndex + 1].slot == trackSlotId then
                local trackEdges = result.edgeLists[trackEdgeIndex + 1]
                if trackEdges then
                    trackEdges.alignTerrain = false
                end
            end
        end)
    end
end

function data()
    return {
        availability = {
            yearFrom = 0,
            yearTo = 0,
        },
        buildMode = "SINGLE",
        cost = {
            price = 0,
        },
        description = {
            name = _("MENU_MODULE_BRIDGE_VOID"),
            description = _("MENU_MODULE_BRIDGE_VOID_DESC"),
        },
        category = {
            categories = {"ust_cat_bridge"},
        },
        type = "ust_bridge",
        order = {
            value = 0,
        },
        metadata = {
            typeName = "ust_bridge",
            typeId = 25,
            scriptName = "construction/station/rail/ust/struct/bridge",
            preProcessAdd = "preProcessAdd",
            preProcessRemove = "preProcessRemove",
            slotSetup = "slotSetup",
            addSlot = "addSlot",
            classify = "classify"
        },
        updateFn = updateFn,
        
        getModelsFn = function(params)
            return {}
        end
    }

end
